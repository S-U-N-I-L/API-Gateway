server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true



eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost

spring:
  application:
    name: API-GATEWAY
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/products/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 2
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/orders/**

  main:
    web-application-type: reactive

  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8090/realms/demo-realm
            token-uri: http://localhost:8090/realms/demo-realm/protocol/openid-connect/token
            authorization-uri: http://localhost:8090/realms/demo-realm/protocol/openid-connect/auth
            userinfo-uri: http://localhost:8090/realms/demo-realm/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: api-gateway
            client-secret: Ep4siFlVJsi3Z72CYXqkoRvm7G1CiqFZ
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8090/realms/demo-realm/protocol/openid-connect/certs




